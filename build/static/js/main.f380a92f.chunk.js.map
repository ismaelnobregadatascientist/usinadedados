{"version":3,"sources":["serviceWorker.js","theme.js","sections/FooterContent.jsx","sections/HeaderContent.jsx","sections/MainContent.jsx","sections/SidebarContent.jsx","App.js","index.js","config.js"],"names":["Boolean","window","location","hostname","match","theme","global","color","brand","brandLight","fontFamily","bar","stroke","strokeWidth","selections","FooterContent","props","gridArea","border","side","backgroundColor","align","justifyContent","direction","size","children","HeaderContent","padding","overflow","MainContent","screen","useScreenSize","flexDirection","boxProps","margin","borderRadius","dynamicWidth","width","dimension","label","single","minHeight","flex","height","min","roundNum","cols","wrapProp","title","legendLabelStyle","fontWeight","valueLabelStyle","fontSize","colorTheme","qField","qLabel","xAxisStyles","FilterIcon","styled","styledFilter","SidebarContent","collapsable","isOpen","onClick","console","log","Options","App","useSidebar","toggle","rows","areas","style","role","aria-label","onClose","ReactDOM","render","StrictMode","config","host","secure","port","prefix","appId","capabilityAPI","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f380a92f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const theme = {\r\n  //Edit your dashboard theme below...\r\n  global: {\r\n    color: {\r\n      brand: '#343a40',\r\n      brandLight: '#FFCCC7',\r\n    },\r\n    fontFamily: 'Montserrat',\r\n    \r\n  },\r\n  bar: {\r\n    stroke: \"#FFCCC7\",\r\n    strokeWidth: 4\r\n  },\r\n  selections: {\r\n    \r\n  }\r\n  \r\n\r\n\r\n}\r\n\r\nexport default theme\r\n","import React from \"react\";\r\nimport { Box } from \"@motor-js/core\";\r\n\r\nconst FooterContent = (props) => {\r\n  return (\r\n    <Box\r\n      gridArea=\"footer\"\r\n      border={{ side: \"top\", color: \"brand\" }}\r\n      backgroundColor=\"brand\"\r\n      align=\"center\"\r\n      justifyContent=\"center\"\r\n      direction=\"row\"\r\n      size=\"small\"\r\n    >\r\n      {props.children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FooterContent;\r\n","import React from \"react\";\r\nimport { Box } from \"@motor-js/core\";\r\n\r\nconst HeaderContent = (props) => {\r\n  return (\r\n    <Box\r\n      gridArea=\"header\"\r\n      backgroundColor=\"brand\"\r\n      border=\"bottom\"\r\n      direction=\"row\"\r\n      align=\"center\"\r\n      padding=\"12px\"\r\n      size=\"large\"\r\n      overflow=\"hidden\"\r\n    >\r\n      {props.children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default HeaderContent;\r\n","import React from \"react\";\r\nimport {Filter, Bar,  KPI, Box, useScreenSize, CurrentSelections } from \"@motor-js/core\";\r\n\r\n\r\nconst MainContent = () => {\r\n  const { screen } = useScreenSize();\r\n\r\n  let flexDirection = \"column\";\r\n  if (screen === \"desktop\" || screen === \"largeDesktop\") flexDirection = \"row\";\r\n\r\n  const boxProps = {\r\n    backgroundColor: \"white\",\r\n    border: { color: \"white\" },\r\n    margin: \"5px\",\r\n    borderRadius: \"2px\",\r\n  };\r\n\r\n  const dynamicWidth = \"calc(50% - 10px)\";\r\n\r\n  return (\r\n    <Box padding=\"10px\" width=\"100%\" overflow=\"scroll\" direction=\"column\">\r\n      <Box width=\"100%\" direction={flexDirection}>\r\n      <Filter dimension={['Porte']}  label=\"PORTE\" single />\r\n      <Filter dimension={['Descrição Setor']}  label=\"SETOR\" single />\r\n      </Box>\r\n\r\n    \r\n\r\n      <CurrentSelections minHeight=\"60px\" width=\"100%\" size=\"medium\" />\r\n      <Box width=\"100%\" direction={flexDirection}>\r\n        <Box flex={true} height={{min: '120px'}} {...boxProps}>\r\n        <KPI roundNum={false} label='Número de Empresas' cols={[ \"=num(Count({<TIPO_ESTAB = {'1'}, [%CODSITCADST]={'02'}>} NUM_CNPJ), '#.##0', ',', '.')\"]} />\r\n        </Box>\r\n        <Box flex={true} height={{min: '120px'}} {...boxProps}>\r\n        <KPI roundNum={false} label='Número de Estabelecimentos' cols={[ \"=num(Count({<[%CODSITCADST]={'02'}>} NUM_CNPJ), '#.##0', ',', '.')\"]} />\r\n        </Box>\r\n        <Box flex={true} height={{min: '120px'}} {...boxProps}>\r\n        <KPI roundNum={false} label='Participação (%)' cols={[ \"=(Count( NUM_CNPJ)/count({1} NUM_CNPJ))*100\"]} />\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box width=\"100%\" flex=\"grow\" wrapProp={true} overflow=\"visible\" >\r\n        {/* <Box width={dynamicWidth} height={{min: '200px'}} {...boxProps} overflow=\"visble\"></Box>\r\n        <Box width={dynamicWidth} height={{min: '200px'}} {...boxProps} overflow=\"visble\"></Box> */}\r\n        <Box width={dynamicWidth} height={{min: '200px'}} {...boxProps} overflow=\"visble\">\r\n        <Bar\r\n            width={850}\r\n            height={550}\r\n            roundNum={false}\r\n            title=\"Empresas por Setor\"\r\n            size='medium'\r\n            legendLabelStyle={{fontFamily: 'MontSerrat', fontWeight: 400}}\r\n            valueLabelStyle={{fontSize: \"large\", fontWeight: \"bold\", fontFamily: 'Montserrat'}}\r\n            colorTheme='eco'\r\n            \r\n                cols={[\r\n                  \"[Descrição Setor]\",\r\n                  { qField: \"=Count([NUM_CNPJ])\", qLabel: \"Empresas Ativas\" }\r\n       \r\n                ]}\r\n        />\r\n        </Box>\r\n        <Box width={dynamicWidth} height={{min: '200px'}} {...boxProps} overflow=\"visble\">\r\n\r\n        <Bar\r\n            width={950}\r\n            height={550}\r\n            roundNum={false}\r\n            legendLabelStyle={{fontFamily: 'MontSerrat', fontWeight: 400}}\r\n            valueLabelStyle={{fontSize: \"large\", fontWeight: \"bold\", fontFamily: 'Montserrat'}}\r\n            xAxisStyles={{\r\n              \r\n              fontFamily: 'Oswald'\r\n            \r\n              }}\r\n            title=\"Empresas por Porte\"\r\n            size='medium'\r\n            colorTheme='eco'\r\n            \r\n            \r\n                cols={[\r\n                  \"Porte\",\r\n                  { qField: \"=Num(Count([NUM_CNPJ]), '#.##0', ',', '.')\", qLabel: \"Empresas Ativas\" }\r\n       \r\n                ]}\r\n        />\r\n        </Box>\r\n      </Box>\r\n\r\n      \r\n\r\n    </Box>\r\n\r\n    \r\n  );\r\n};\r\n\r\nexport default MainContent;\r\n","import React from \"react\";\r\nimport { Box, Sidebar } from \"@motor-js/core\";\r\nimport styled from \"styled-components\";\r\nimport { Filter as styledFilter } from \"@styled-icons/ionicons-solid\";\r\n\r\nconst FilterIcon = styled(styledFilter)`\r\n  color: black;\r\n  padding: 0px 10px 0px 5px;\r\n`;\r\n\r\nconst SidebarContent = (props) => {\r\n  const toggle = () => {\r\n    console.log('toggle')\r\n   // props.onClick();\r\n  };\r\n\r\n  return (\r\n    <Sidebar\r\n      width=\"30%\"\r\n      collapsable\r\n      direction=\"column\"\r\n      padding=\"15px 12px\"\r\n      isOpen={props.isOpen}\r\n      backgroundColor=\"altGray1\"\r\n      justifyContent=\"top\"\r\n      border={{ color: \"brand\" }}\r\n    >\r\n      <Box direction=\"column\" overflow=\"visible\">\r\n        <Box\r\n          gridArea=\"header\"\r\n          border={{ side: \"bottom\", color: \"brand\" }}\r\n          padding=\"0px 0px 10px 0px\"\r\n          direction=\"row\"\r\n          align=\"center\"\r\n          size=\"large\"\r\n          overflow=\"hidden\"\r\n        >\r\n          <FilterIcon onClick={toggle} size={25} />\r\n          Filters\r\n        </Box>\r\n        <Box direction=\"column\" padding=\"0px 0px 0px 30px\" overflow=\"visible\">\r\n          {/** FILTERS */}\r\n        </Box>\r\n      </Box>\r\n    </Sidebar>\r\n  );\r\n};\r\n\r\nexport default SidebarContent;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport \"./App.css\";\r\nimport {\r\n  MainContent,\r\n  SidebarContent,\r\n  HeaderContent,\r\n  FooterContent,\r\n} from \"./sections\";\r\nimport { Grid, Box, useSidebar } from \"@motor-js/core\";\r\nimport { Options } from \"@styled-icons/ionicons-solid\";\r\n\r\nconst FilterIcon = styled(Options)`\r\n  color: white;\r\n  padding: 0px 30px 0px 5px;\r\n`;\r\n\r\nfunction App() {\r\n  //use the Siderbar hook\r\n  const { isOpen, toggle } = useSidebar();\r\n\r\n  return (\r\n    <Grid\r\n      rows={[\"60px\", \"auto\", \"30px\"]}\r\n      cols={[\"auto\"]}\r\n      areas={[[\"header\"], [\"main\"], [\"footer\"]]}\r\n      backgroundColor=\"altGray1\"\r\n    >\r\n      {/** HEADER */}\r\n      <HeaderContent>\r\n        <FilterIcon onClick={toggle} size={25} />\r\n        <span style={{ fontFamily: \"Oswald\", color: \"white\", fontWeight: \"regular\" }}>\r\n          USINA DE DADOS{\" \"}\r\n          <span role=\"img\" aria-label=\"peace_emoji\">\r\n            ✌️\r\n          </span>\r\n        </span>\r\n      </HeaderContent>\r\n      {/** SIDEBAR */}\r\n      <SidebarContent onClick={toggle} isOpen={isOpen} onClose={toggle}/>\r\n      {/** MAIN */}\r\n      <Box gridArea=\"main\">\r\n        <MainContent />\r\n      </Box>\r\n      {/** FOOTER */}\r\n      <FooterContent>\r\n        <span style={{ color: \"white\" }}>\r\n          made with\r\n          <span\r\n            role=\"img\"\r\n            aria-label=\"heart_emoji\"\r\n            style={{ padding: \"0px 5px\" }}\r\n          >\r\n            ❤️\r\n          </span>\r\n          by motor\r\n        </span>\r\n      </FooterContent>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Motor } from \"@motor-js/core\";\r\nimport { config } from \"./config.js\";\r\nimport theme from \"./theme\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Motor config={config} theme={theme} capabilityAPI={true}>\r\n      <App />\r\n    </Motor>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n serviceWorker.unregister();\r\n","export const config = {\r\n\r\n  host: 'qap.sebrae.com.br',\r\n  secure: true,\r\n  port: 443,\r\n  prefix: '',\r\n  appId: 'd183a25e-de1d-47a0-b2a0-459dfbbc20d1'\r\n \r\n};\r\n"],"sourceRoot":""}